// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Net;
    using System.Net.Http;

    /// <summary>
    /// This OData service is located at http://localhost
    /// </summary>
    public partial class DynamicsClient : ServiceClient<DynamicsClient>, IDynamicsClient
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        public System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        public JsonSerializerSettings SerializationSettings { get; private set; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        public JsonSerializerSettings DeserializationSettings { get; private set; }

        /// <summary>
        /// Show only the first n items
        /// </summary>
        public int? Top215 { get; set; }

        /// <summary>
        /// Skip the first n items
        /// </summary>
        public int? Skip215 { get; set; }

        /// <summary>
        /// Include count of items
        /// </summary>
        public bool? Count215 { get; set; }

        /// <summary>
        /// Filter items by property values
        /// </summary>
        public string Filter215 { get; set; }

        /// <summary>
        /// Search items by search phrases
        /// </summary>
        public string Search215 { get; set; }

        /// <summary>
        /// Subscription credentials which uniquely identify client subscription.
        /// </summary>
        public ServiceClientCredentials Credentials { get; private set; }

        /// <summary>
        /// Gets the IAccounts.
        /// </summary>
        public virtual IAccounts Accounts { get; private set; }

        /// <summary>
        /// Gets the IAccountinvestigationrequests.
        /// </summary>
        public virtual IAccountinvestigationrequests Accountinvestigationrequests { get; private set; }

        /// <summary>
        /// Gets the IAccountinvestigationsubjects.
        /// </summary>
        public virtual IAccountinvestigationsubjects Accountinvestigationsubjects { get; private set; }

        /// <summary>
        /// Gets the IAdoxiolicencetypeadoxioinvestigationset.
        /// </summary>
        public virtual IAdoxiolicencetypeadoxioinvestigationset Adoxiolicencetypeadoxioinvestigationset { get; private set; }

        /// <summary>
        /// Gets the IAliases.
        /// </summary>
        public virtual IAliases Aliases { get; private set; }

        /// <summary>
        /// Gets the IAnnualvolumes.
        /// </summary>
        public virtual IAnnualvolumes Annualvolumes { get; private set; }

        /// <summary>
        /// Gets the IApplicationbpfv3s.
        /// </summary>
        public virtual IApplicationbpfv3s Applicationbpfv3s { get; private set; }

        /// <summary>
        /// Gets the IApplicationcrsbpfv4s.
        /// </summary>
        public virtual IApplicationcrsbpfv4s Applicationcrsbpfv4s { get; private set; }

        /// <summary>
        /// Gets the IApplicationinvoicehistories.
        /// </summary>
        public virtual IApplicationinvoicehistories Applicationinvoicehistories { get; private set; }

        /// <summary>
        /// Gets the IApplicationlicenseechangesv10s.
        /// </summary>
        public virtual IApplicationlicenseechangesv10s Applicationlicenseechangesv10s { get; private set; }

        /// <summary>
        /// Gets the IApplicationliquorbpfv2s.
        /// </summary>
        public virtual IApplicationliquorbpfv2s Applicationliquorbpfv2s { get; private set; }

        /// <summary>
        /// Gets the IApplicationrelocationv1s.
        /// </summary>
        public virtual IApplicationrelocationv1s Applicationrelocationv1s { get; private set; }

        /// <summary>
        /// Gets the IApplications.
        /// </summary>
        public virtual IApplications Applications { get; private set; }

        /// <summary>
        /// Gets the IApplicationinvestigationrequests.
        /// </summary>
        public virtual IApplicationinvestigationrequests Applicationinvestigationrequests { get; private set; }

        /// <summary>
        /// Gets the IApplicationstructurechangev1s.
        /// </summary>
        public virtual IApplicationstructurechangev1s Applicationstructurechangev1s { get; private set; }

        /// <summary>
        /// Gets the IApplicationtermsconditionslimitations.
        /// </summary>
        public virtual IApplicationtermsconditionslimitations Applicationtermsconditionslimitations { get; private set; }

        /// <summary>
        /// Gets the IApplicationtransferownershipv1s.
        /// </summary>
        public virtual IApplicationtransferownershipv1s Applicationtransferownershipv1s { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypecontents.
        /// </summary>
        public virtual IApplicationtypecontents Applicationtypecontents { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypefeeschedules.
        /// </summary>
        public virtual IApplicationtypefeeschedules Applicationtypefeeschedules { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypes.
        /// </summary>
        public virtual IApplicationtypes Applicationtypes { get; private set; }

        /// <summary>
        /// Gets the IRenewalfeeproduct.
        /// </summary>
        public virtual IRenewalfeeproduct Renewalfeeproduct { get; private set; }

        /// <summary>
        /// Gets the IApplicenseechangebpfv2s.
        /// </summary>
        public virtual IApplicenseechangebpfv2s Applicenseechangebpfv2s { get; private set; }

        /// <summary>
        /// Gets the IAreas.
        /// </summary>
        public virtual IAreas Areas { get; private set; }

        /// <summary>
        /// Gets the IAuditlogrequests.
        /// </summary>
        public virtual IAuditlogrequests Auditlogrequests { get; private set; }

        /// <summary>
        /// Gets the IBusinessaccounts.
        /// </summary>
        public virtual IBusinessaccounts Businessaccounts { get; private set; }

        /// <summary>
        /// Gets the ICannabisinventoryreports.
        /// </summary>
        public virtual ICannabisinventoryreports Cannabisinventoryreports { get; private set; }

        /// <summary>
        /// Gets the ICannabismonthlyreports.
        /// </summary>
        public virtual ICannabismonthlyreports Cannabismonthlyreports { get; private set; }

        /// <summary>
        /// Gets the ICannabisproductadmins.
        /// </summary>
        public virtual ICannabisproductadmins Cannabisproductadmins { get; private set; }

        /// <summary>
        /// Gets the ICitydistricts.
        /// </summary>
        public virtual ICitydistricts Citydistricts { get; private set; }

        /// <summary>
        /// Gets the IComplaints.
        /// </summary>
        public virtual IComplaints Complaints { get; private set; }

        /// <summary>
        /// Gets the IComplaintinvestigationrequests.
        /// </summary>
        public virtual IComplaintinvestigationrequests Complaintinvestigationrequests { get; private set; }

        /// <summary>
        /// Gets the IComplaintinvestigationsunit.
        /// </summary>
        public virtual IComplaintinvestigationsunit Complaintinvestigationsunit { get; private set; }

        /// <summary>
        /// Gets the IComplianceinvestigations.
        /// </summary>
        public virtual IComplianceinvestigations Complianceinvestigations { get; private set; }

        /// <summary>
        /// Gets the IComplianceinvestigationadoxiormreviewinvestigationenforcement.
        /// </summary>
        public virtual IComplianceinvestigationadoxiormreviewinvestigationenforcement Complianceinvestigationadoxiormreviewinvestigationenforcement { get; private set; }

        /// <summary>
        /// Gets the IComplianceinvestigationenforcementaction.
        /// </summary>
        public virtual IComplianceinvestigationenforcementaction Complianceinvestigationenforcementaction { get; private set; }

        /// <summary>
        /// Gets the ICompliancemeetings.
        /// </summary>
        public virtual ICompliancemeetings Compliancemeetings { get; private set; }

        /// <summary>
        /// Gets the IContraventionadmins.
        /// </summary>
        public virtual IContraventionadmins Contraventionadmins { get; private set; }

        /// <summary>
        /// Gets the IContraventioninvestigationrequests.
        /// </summary>
        public virtual IContraventioninvestigationrequests Contraventioninvestigationrequests { get; private set; }

        /// <summary>
        /// Gets the IContraventions.
        /// </summary>
        public virtual IContraventions Contraventions { get; private set; }

        /// <summary>
        /// Gets the ICorporatehistorysummaries.
        /// </summary>
        public virtual ICorporatehistorysummaries Corporatehistorysummaries { get; private set; }

        /// <summary>
        /// Gets the ICorporateroles.
        /// </summary>
        public virtual ICorporateroles Corporateroles { get; private set; }

        /// <summary>
        /// Gets the ICustomautonumberdefinitions.
        /// </summary>
        public virtual ICustomautonumberdefinitions Customautonumberdefinitions { get; private set; }

        /// <summary>
        /// Gets the ICustomautonumberrequests.
        /// </summary>
        public virtual ICustomautonumberrequests Customautonumberrequests { get; private set; }

        /// <summary>
        /// Gets the IDocumentadmins.
        /// </summary>
        public virtual IDocumentadmins Documentadmins { get; private set; }

        /// <summary>
        /// Gets the IDocuments.
        /// </summary>
        public virtual IDocuments Documents { get; private set; }

        /// <summary>
        /// Gets the IEndorsements.
        /// </summary>
        public virtual IEndorsements Endorsements { get; private set; }

        /// <summary>
        /// Gets the IEnforcementactionbpfs.
        /// </summary>
        public virtual IEnforcementactionbpfs Enforcementactionbpfs { get; private set; }

        /// <summary>
        /// Gets the IEnforcementactions.
        /// </summary>
        public virtual IEnforcementactions Enforcementactions { get; private set; }

        /// <summary>
        /// Gets the IInvestigationid.
        /// </summary>
        public virtual IInvestigationid Investigationid { get; private set; }

        /// <summary>
        /// Gets the IEstablishmentincidents.
        /// </summary>
        public virtual IEstablishmentincidents Establishmentincidents { get; private set; }

        /// <summary>
        /// Gets the IEstablishments.
        /// </summary>
        public virtual IEstablishments Establishments { get; private set; }

        /// <summary>
        /// Gets the IEstablishmentinvestigationrequests.
        /// </summary>
        public virtual IEstablishmentinvestigationrequests Establishmentinvestigationrequests { get; private set; }

        /// <summary>
        /// Gets the IPmuareaid.
        /// </summary>
        public virtual IPmuareaid Pmuareaid { get; private set; }

        /// <summary>
        /// Gets the IEstablishmentwatchwords.
        /// </summary>
        public virtual IEstablishmentwatchwords Establishmentwatchwords { get; private set; }

        /// <summary>
        /// Gets the IEventaddresses.
        /// </summary>
        public virtual IEventaddresses Eventaddresses { get; private set; }

        /// <summary>
        /// Gets the IEventlocations.
        /// </summary>
        public virtual IEventlocations Eventlocations { get; private set; }

        /// <summary>
        /// Gets the IEventid.
        /// </summary>
        public virtual IEventid Eventid { get; private set; }

        /// <summary>
        /// Gets the IEventlocationasyncoperations.
        /// </summary>
        public virtual IEventlocationasyncoperations Eventlocationasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IEventlocationbulkdeletefailures.
        /// </summary>
        public virtual IEventlocationbulkdeletefailures Eventlocationbulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IEventlocationmailboxtrackingfolders.
        /// </summary>
        public virtual IEventlocationmailboxtrackingfolders Eventlocationmailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IEventlocationprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IEventlocationprincipalobjectattributeaccesses Eventlocationprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IEventlocationprocesssession.
        /// </summary>
        public virtual IEventlocationprocesssession Eventlocationprocesssession { get; private set; }

        /// <summary>
        /// Gets the IEventlocationsyncerrors.
        /// </summary>
        public virtual IEventlocationsyncerrors Eventlocationsyncerrors { get; private set; }

        /// <summary>
        /// Gets the IServiceareaid.
        /// </summary>
        public virtual IServiceareaid Serviceareaid { get; private set; }

        /// <summary>
        /// Gets the IEvents.
        /// </summary>
        public virtual IEvents Events { get; private set; }

        /// <summary>
        /// Gets the IEventeventlocations.
        /// </summary>
        public virtual IEventeventlocations Eventeventlocations { get; private set; }

        /// <summary>
        /// Gets the IEventschedules.
        /// </summary>
        public virtual IEventschedules Eventschedules { get; private set; }

        /// <summary>
        /// Gets the IExhibits.
        /// </summary>
        public virtual IExhibits Exhibits { get; private set; }

        /// <summary>
        /// Gets the IFederalreportexports.
        /// </summary>
        public virtual IFederalreportexports Federalreportexports { get; private set; }

        /// <summary>
        /// Gets the IFiainvestigationlogs.
        /// </summary>
        public virtual IFiainvestigationlogs Fiainvestigationlogs { get; private set; }

        /// <summary>
        /// Gets the IFormelementuploadfields.
        /// </summary>
        public virtual IFormelementuploadfields Formelementuploadfields { get; private set; }

        /// <summary>
        /// Gets the IFundingsources.
        /// </summary>
        public virtual IFundingsources Fundingsources { get; private set; }

        /// <summary>
        /// Gets the IHoursofservices.
        /// </summary>
        public virtual IHoursofservices Hoursofservices { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicesdefaults.
        /// </summary>
        public virtual IHoursofservicesdefaults Hoursofservicesdefaults { get; private set; }

        /// <summary>
        /// Gets the IIncidentadoxiolicencetypeset.
        /// </summary>
        public virtual IIncidentadoxiolicencetypeset Incidentadoxiolicencetypeset { get; private set; }

        /// <summary>
        /// Gets the IInspectioninspectorsset.
        /// </summary>
        public virtual IInspectioninspectorsset Inspectioninspectorsset { get; private set; }

        /// <summary>
        /// Gets the IInspectionformconfigurations.
        /// </summary>
        public virtual IInspectionformconfigurations Inspectionformconfigurations { get; private set; }

        /// <summary>
        /// Gets the IInspectionreactivationhistories.
        /// </summary>
        public virtual IInspectionreactivationhistories Inspectionreactivationhistories { get; private set; }

        /// <summary>
        /// Gets the IInspectorcommentsrollups.
        /// </summary>
        public virtual IInspectorcommentsrollups Inspectorcommentsrollups { get; private set; }

        /// <summary>
        /// Gets the IInspectorreports.
        /// </summary>
        public virtual IInspectorreports Inspectorreports { get; private set; }

        /// <summary>
        /// Gets the IInterests.
        /// </summary>
        public virtual IInterests Interests { get; private set; }

        /// <summary>
        /// Gets the IInvestigationactivities.
        /// </summary>
        public virtual IInvestigationactivities Investigationactivities { get; private set; }

        /// <summary>
        /// Gets the IInvestigationcontacts.
        /// </summary>
        public virtual IInvestigationcontacts Investigationcontacts { get; private set; }

        /// <summary>
        /// Gets the IContactid.
        /// </summary>
        public virtual IContactid Contactid { get; private set; }

        /// <summary>
        /// Gets the IInvestigationcontactasyncoperations.
        /// </summary>
        public virtual IInvestigationcontactasyncoperations Investigationcontactasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IInvestigationcontactbulkdeletefailures.
        /// </summary>
        public virtual IInvestigationcontactbulkdeletefailures Investigationcontactbulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IInvestigationcontactduplicatebaserecord.
        /// </summary>
        public virtual IInvestigationcontactduplicatebaserecord Investigationcontactduplicatebaserecord { get; private set; }

        /// <summary>
        /// Gets the IInvestigationcontactduplicatematchingrecord.
        /// </summary>
        public virtual IInvestigationcontactduplicatematchingrecord Investigationcontactduplicatematchingrecord { get; private set; }

        /// <summary>
        /// Gets the IInvestigationcontactmailboxtrackingfolders.
        /// </summary>
        public virtual IInvestigationcontactmailboxtrackingfolders Investigationcontactmailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IInvestigationcontactprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IInvestigationcontactprincipalobjectattributeaccesses Investigationcontactprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IInvestigationcontactprocesssession.
        /// </summary>
        public virtual IInvestigationcontactprocesssession Investigationcontactprocesssession { get; private set; }

        /// <summary>
        /// Gets the IInvestigationcontactsyncerrors.
        /// </summary>
        public virtual IInvestigationcontactsyncerrors Investigationcontactsyncerrors { get; private set; }

        /// <summary>
        /// Gets the IInvestigationreactivationhistories.
        /// </summary>
        public virtual IInvestigationreactivationhistories Investigationreactivationhistories { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequests.
        /// </summary>
        public virtual IInvestigationrequests Investigationrequests { get; private set; }

        /// <summary>
        /// Gets the IAccountid.
        /// </summary>
        public virtual IAccountid Accountid { get; private set; }

        /// <summary>
        /// Gets the IApplicationid.
        /// </summary>
        public virtual IApplicationid Applicationid { get; private set; }

        /// <summary>
        /// Gets the IComplaintid.
        /// </summary>
        public virtual IComplaintid Complaintid { get; private set; }

        /// <summary>
        /// Gets the IContraventionid.
        /// </summary>
        public virtual IContraventionid Contraventionid { get; private set; }

        /// <summary>
        /// Gets the IEstablishmentid.
        /// </summary>
        public virtual IEstablishmentid Establishmentid { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestasyncoperations.
        /// </summary>
        public virtual IInvestigationrequestasyncoperations Investigationrequestasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestbulkdeletefailures.
        /// </summary>
        public virtual IInvestigationrequestbulkdeletefailures Investigationrequestbulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestduplicatebaserecord.
        /// </summary>
        public virtual IInvestigationrequestduplicatebaserecord Investigationrequestduplicatebaserecord { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestduplicatematchingrecord.
        /// </summary>
        public virtual IInvestigationrequestduplicatematchingrecord Investigationrequestduplicatematchingrecord { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestinvestigations.
        /// </summary>
        public virtual IInvestigationrequestinvestigations Investigationrequestinvestigations { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestmailboxtrackingfolders.
        /// </summary>
        public virtual IInvestigationrequestmailboxtrackingfolders Investigationrequestmailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IInvestigationrequestprincipalobjectattributeaccesses Investigationrequestprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestprocesssession.
        /// </summary>
        public virtual IInvestigationrequestprocesssession Investigationrequestprocesssession { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestsharepointdocumentlocations.
        /// </summary>
        public virtual IInvestigationrequestsharepointdocumentlocations Investigationrequestsharepointdocumentlocations { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestsyncerrors.
        /// </summary>
        public virtual IInvestigationrequestsyncerrors Investigationrequestsyncerrors { get; private set; }

        /// <summary>
        /// Gets the ILicenceid.
        /// </summary>
        public virtual ILicenceid Licenceid { get; private set; }

        /// <summary>
        /// Gets the IOfficeid.
        /// </summary>
        public virtual IOfficeid Officeid { get; private set; }

        /// <summary>
        /// Gets the IInvestigations.
        /// </summary>
        public virtual IInvestigations Investigations { get; private set; }

        /// <summary>
        /// Gets the IInvestigationinvestigationcontacts.
        /// </summary>
        public virtual IInvestigationinvestigationcontacts Investigationinvestigationcontacts { get; private set; }

        /// <summary>
        /// Gets the IInvestigationinvestigations.
        /// </summary>
        public virtual IInvestigationinvestigations Investigationinvestigations { get; private set; }

        /// <summary>
        /// Gets the IInvestigationrequestid.
        /// </summary>
        public virtual IInvestigationrequestid Investigationrequestid { get; private set; }

        /// <summary>
        /// Gets the IInvestigationunitid.
        /// </summary>
        public virtual IInvestigationunitid Investigationunitid { get; private set; }

        /// <summary>
        /// Gets the IInvestigationsubjects.
        /// </summary>
        public virtual IInvestigationsubjects Investigationsubjects { get; private set; }

        /// <summary>
        /// Gets the IInvestigationsubjectasyncoperations.
        /// </summary>
        public virtual IInvestigationsubjectasyncoperations Investigationsubjectasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IInvestigationsubjectbulkdeletefailures.
        /// </summary>
        public virtual IInvestigationsubjectbulkdeletefailures Investigationsubjectbulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IInvestigationsubjectduplicatebaserecord.
        /// </summary>
        public virtual IInvestigationsubjectduplicatebaserecord Investigationsubjectduplicatebaserecord { get; private set; }

        /// <summary>
        /// Gets the IInvestigationsubjectduplicatematchingrecord.
        /// </summary>
        public virtual IInvestigationsubjectduplicatematchingrecord Investigationsubjectduplicatematchingrecord { get; private set; }

        /// <summary>
        /// Gets the IInvestigationsubjectmailboxtrackingfolders.
        /// </summary>
        public virtual IInvestigationsubjectmailboxtrackingfolders Investigationsubjectmailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IInvestigationsubjectprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IInvestigationsubjectprincipalobjectattributeaccesses Investigationsubjectprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IInvestigationsubjectprocesssession.
        /// </summary>
        public virtual IInvestigationsubjectprocesssession Investigationsubjectprocesssession { get; private set; }

        /// <summary>
        /// Gets the IInvestigationsubjectsyncerrors.
        /// </summary>
        public virtual IInvestigationsubjectsyncerrors Investigationsubjectsyncerrors { get; private set; }

        /// <summary>
        /// Gets the ILdborders.
        /// </summary>
        public virtual ILdborders Ldborders { get; private set; }

        /// <summary>
        /// Gets the ILeconnections.
        /// </summary>
        public virtual ILeconnections Leconnections { get; private set; }

        /// <summary>
        /// Gets the ILegalentities.
        /// </summary>
        public virtual ILegalentities Legalentities { get; private set; }

        /// <summary>
        /// Gets the ILicenceldbordertotalhistories.
        /// </summary>
        public virtual ILicenceldbordertotalhistories Licenceldbordertotalhistories { get; private set; }

        /// <summary>
        /// Gets the ILicenceses.
        /// </summary>
        public virtual ILicenceses Licenceses { get; private set; }

        /// <summary>
        /// Gets the ILicencesadoxioonestopmessageitemlicence.
        /// </summary>
        public virtual ILicencesadoxioonestopmessageitemlicence Licencesadoxioonestopmessageitemlicence { get; private set; }

        /// <summary>
        /// Gets the ILicencesinvestigationrequests.
        /// </summary>
        public virtual ILicencesinvestigationrequests Licencesinvestigationrequests { get; private set; }

        /// <summary>
        /// Gets the ILicencesubcategories.
        /// </summary>
        public virtual ILicencesubcategories Licencesubcategories { get; private set; }

        /// <summary>
        /// Gets the ILicencetypes.
        /// </summary>
        public virtual ILicencetypes Licencetypes { get; private set; }

        /// <summary>
        /// Gets the ILicencetypesapplicationtypesset.
        /// </summary>
        public virtual ILicencetypesapplicationtypesset Licencetypesapplicationtypesset { get; private set; }

        /// <summary>
        /// Gets the ILicenseechangelogs.
        /// </summary>
        public virtual ILicenseechangelogs Licenseechangelogs { get; private set; }

        /// <summary>
        /// Gets the ILoans.
        /// </summary>
        public virtual ILoans Loans { get; private set; }

        /// <summary>
        /// Gets the ILocalgovindigenousnations.
        /// </summary>
        public virtual ILocalgovindigenousnations Localgovindigenousnations { get; private set; }

        /// <summary>
        /// Gets the ILqrlicencetransferbpfs.
        /// </summary>
        public virtual ILqrlicencetransferbpfs Lqrlicencetransferbpfs { get; private set; }

        /// <summary>
        /// Gets the IOffsitestorages.
        /// </summary>
        public virtual IOffsitestorages Offsitestorages { get; private set; }

        /// <summary>
        /// Gets the IOnestopmessageitems.
        /// </summary>
        public virtual IOnestopmessageitems Onestopmessageitems { get; private set; }

        /// <summary>
        /// Gets the ILicence.
        /// </summary>
        public virtual ILicence Licence { get; private set; }

        /// <summary>
        /// Gets the IOnestopmessageitemasyncoperations.
        /// </summary>
        public virtual IOnestopmessageitemasyncoperations Onestopmessageitemasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IOnestopmessageitembulkdeletefailures.
        /// </summary>
        public virtual IOnestopmessageitembulkdeletefailures Onestopmessageitembulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IOnestopmessageitemduplicatebaserecord.
        /// </summary>
        public virtual IOnestopmessageitemduplicatebaserecord Onestopmessageitemduplicatebaserecord { get; private set; }

        /// <summary>
        /// Gets the IOnestopmessageitemduplicatematchingrecord.
        /// </summary>
        public virtual IOnestopmessageitemduplicatematchingrecord Onestopmessageitemduplicatematchingrecord { get; private set; }

        /// <summary>
        /// Gets the IOnestopmessageitemmailboxtrackingfolders.
        /// </summary>
        public virtual IOnestopmessageitemmailboxtrackingfolders Onestopmessageitemmailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IOnestopmessageitemprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IOnestopmessageitemprincipalobjectattributeaccesses Onestopmessageitemprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IOnestopmessageitemprocesssession.
        /// </summary>
        public virtual IOnestopmessageitemprocesssession Onestopmessageitemprocesssession { get; private set; }

        /// <summary>
        /// Gets the IOnestopmessageitemsyncerrors.
        /// </summary>
        public virtual IOnestopmessageitemsyncerrors Onestopmessageitemsyncerrors { get; private set; }

        /// <summary>
        /// Gets the IPersonalhistorysummaries.
        /// </summary>
        public virtual IPersonalhistorysummaries Personalhistorysummaries { get; private set; }

        /// <summary>
        /// Gets the IPmuareas.
        /// </summary>
        public virtual IPmuareas Pmuareas { get; private set; }

        /// <summary>
        /// Gets the IPmuareaestablishments.
        /// </summary>
        public virtual IPmuareaestablishments Pmuareaestablishments { get; private set; }

        /// <summary>
        /// Gets the IPolicejurisdictions.
        /// </summary>
        public virtual IPolicejurisdictions Policejurisdictions { get; private set; }

        /// <summary>
        /// Gets the IPolicydocuments.
        /// </summary>
        public virtual IPolicydocuments Policydocuments { get; private set; }

        /// <summary>
        /// Gets the IPostalcodes.
        /// </summary>
        public virtual IPostalcodes Postalcodes { get; private set; }

        /// <summary>
        /// Gets the IPreviousaddresses.
        /// </summary>
        public virtual IPreviousaddresses Previousaddresses { get; private set; }

        /// <summary>
        /// Gets the IProratedlicencefeeschedules.
        /// </summary>
        public virtual IProratedlicencefeeschedules Proratedlicencefeeschedules { get; private set; }

        /// <summary>
        /// Gets the IRegions.
        /// </summary>
        public virtual IRegions Regions { get; private set; }

        /// <summary>
        /// Gets the IRelatedparties.
        /// </summary>
        public virtual IRelatedparties Relatedparties { get; private set; }

        /// <summary>
        /// Gets the IRmreviews.
        /// </summary>
        public virtual IRmreviews Rmreviews { get; private set; }

        /// <summary>
        /// Gets the IInvestigationenforcement.
        /// </summary>
        public virtual IInvestigationenforcement Investigationenforcement { get; private set; }

        /// <summary>
        /// Gets the IServiceareas.
        /// </summary>
        public virtual IServiceareas Serviceareas { get; private set; }

        /// <summary>
        /// Gets the IServiceareaeventlocations.
        /// </summary>
        public virtual IServiceareaeventlocations Serviceareaeventlocations { get; private set; }

        /// <summary>
        /// Gets the ISettings.
        /// </summary>
        public virtual ISettings Settings { get; private set; }

        /// <summary>
        /// Gets the ISpddatarows.
        /// </summary>
        public virtual ISpddatarows Spddatarows { get; private set; }

        /// <summary>
        /// Gets the ISpdexportses.
        /// </summary>
        public virtual ISpdexportses Spdexportses { get; private set; }

        /// <summary>
        /// Gets the ISpecialeventlicencedareas.
        /// </summary>
        public virtual ISpecialeventlicencedareas Specialeventlicencedareas { get; private set; }

        /// <summary>
        /// Gets the ISpecialeventlocations.
        /// </summary>
        public virtual ISpecialeventlocations Specialeventlocations { get; private set; }

        /// <summary>
        /// Gets the ISpecialeventnotes.
        /// </summary>
        public virtual ISpecialeventnotes Specialeventnotes { get; private set; }

        /// <summary>
        /// Gets the ISpecialevents.
        /// </summary>
        public virtual ISpecialevents Specialevents { get; private set; }

        /// <summary>
        /// Gets the ISpecialeventinspection.
        /// </summary>
        public virtual ISpecialeventinspection Specialeventinspection { get; private set; }

        /// <summary>
        /// Gets the ISpecialeventschedules.
        /// </summary>
        public virtual ISpecialeventschedules Specialeventschedules { get; private set; }

        /// <summary>
        /// Gets the ISpecialeventtandcs.
        /// </summary>
        public virtual ISpecialeventtandcs Specialeventtandcs { get; private set; }

        /// <summary>
        /// Gets the ITaxandaccountings.
        /// </summary>
        public virtual ITaxandaccountings Taxandaccountings { get; private set; }

        /// <summary>
        /// Gets the ITermsconditionslimitationspresets.
        /// </summary>
        public virtual ITermsconditionslimitationspresets Termsconditionslimitationspresets { get; private set; }

        /// <summary>
        /// Gets the ITerritories.
        /// </summary>
        public virtual ITerritories Territories { get; private set; }

        /// <summary>
        /// Gets the IOfficeinvestigationrequests.
        /// </summary>
        public virtual IOfficeinvestigationrequests Officeinvestigationrequests { get; private set; }

        /// <summary>
        /// Gets the ITiedhouseassociations.
        /// </summary>
        public virtual ITiedhouseassociations Tiedhouseassociations { get; private set; }

        /// <summary>
        /// Gets the ITiedhouseconnections.
        /// </summary>
        public virtual ITiedhouseconnections Tiedhouseconnections { get; private set; }

        /// <summary>
        /// Gets the IWitnesses.
        /// </summary>
        public virtual IWitnesses Witnesses { get; private set; }

        /// <summary>
        /// Gets the IWorkerinvoicehistories.
        /// </summary>
        public virtual IWorkerinvoicehistories Workerinvoicehistories { get; private set; }

        /// <summary>
        /// Gets the IWorkers.
        /// </summary>
        public virtual IWorkers Workers { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxioeventlocation.
        /// </summary>
        public virtual IRegardingobjectidadoxioeventlocation Regardingobjectidadoxioeventlocation { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxioinvestigationcontact.
        /// </summary>
        public virtual IRegardingobjectidadoxioinvestigationcontact Regardingobjectidadoxioinvestigationcontact { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxioinvestigationrequest.
        /// </summary>
        public virtual IRegardingobjectidadoxioinvestigationrequest Regardingobjectidadoxioinvestigationrequest { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxioinvestigationsubject.
        /// </summary>
        public virtual IRegardingobjectidadoxioinvestigationsubject Regardingobjectidadoxioinvestigationsubject { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxioonestopmessageitem.
        /// </summary>
        public virtual IRegardingobjectidadoxioonestopmessageitem Regardingobjectidadoxioonestopmessageitem { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxioeventlocation.
        /// </summary>
        public virtual IBusinessunitadoxioeventlocation Businessunitadoxioeventlocation { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxioinvestigationcontact.
        /// </summary>
        public virtual IBusinessunitadoxioinvestigationcontact Businessunitadoxioinvestigationcontact { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxioinvestigationrequest.
        /// </summary>
        public virtual IBusinessunitadoxioinvestigationrequest Businessunitadoxioinvestigationrequest { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxioinvestigationsubject.
        /// </summary>
        public virtual IBusinessunitadoxioinvestigationsubject Businessunitadoxioinvestigationsubject { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxioonestopmessageitem.
        /// </summary>
        public virtual IBusinessunitadoxioonestopmessageitem Businessunitadoxioonestopmessageitem { get; private set; }

        /// <summary>
        /// Gets the IContacts.
        /// </summary>
        public virtual IContacts Contacts { get; private set; }

        /// <summary>
        /// Gets the IContactinvestigationcontacts.
        /// </summary>
        public virtual IContactinvestigationcontacts Contactinvestigationcontacts { get; private set; }

        /// <summary>
        /// Gets the IBaserecordidadoxioinvestigationcontact.
        /// </summary>
        public virtual IBaserecordidadoxioinvestigationcontact Baserecordidadoxioinvestigationcontact { get; private set; }

        /// <summary>
        /// Gets the IBaserecordidadoxioinvestigationrequest.
        /// </summary>
        public virtual IBaserecordidadoxioinvestigationrequest Baserecordidadoxioinvestigationrequest { get; private set; }

        /// <summary>
        /// Gets the IBaserecordidadoxioinvestigationsubject.
        /// </summary>
        public virtual IBaserecordidadoxioinvestigationsubject Baserecordidadoxioinvestigationsubject { get; private set; }

        /// <summary>
        /// Gets the IBaserecordidadoxioonestopmessageitem.
        /// </summary>
        public virtual IBaserecordidadoxioonestopmessageitem Baserecordidadoxioonestopmessageitem { get; private set; }

        /// <summary>
        /// Gets the IDuplicaterecordidadoxioinvestigationcontact.
        /// </summary>
        public virtual IDuplicaterecordidadoxioinvestigationcontact Duplicaterecordidadoxioinvestigationcontact { get; private set; }

        /// <summary>
        /// Gets the IDuplicaterecordidadoxioinvestigationrequest.
        /// </summary>
        public virtual IDuplicaterecordidadoxioinvestigationrequest Duplicaterecordidadoxioinvestigationrequest { get; private set; }

        /// <summary>
        /// Gets the IDuplicaterecordidadoxioinvestigationsubject.
        /// </summary>
        public virtual IDuplicaterecordidadoxioinvestigationsubject Duplicaterecordidadoxioinvestigationsubject { get; private set; }

        /// <summary>
        /// Gets the IDuplicaterecordidadoxioonestopmessageitem.
        /// </summary>
        public virtual IDuplicaterecordidadoxioonestopmessageitem Duplicaterecordidadoxioonestopmessageitem { get; private set; }

        /// <summary>
        /// Gets the IEntitydefinitions.
        /// </summary>
        public virtual IEntitydefinitions Entitydefinitions { get; private set; }

        /// <summary>
        /// Gets the IGlobaloptionsetdefinitions.
        /// </summary>
        public virtual IGlobaloptionsetdefinitions Globaloptionsetdefinitions { get; private set; }

        /// <summary>
        /// Gets the ISpecialeventid.
        /// </summary>
        public virtual ISpecialeventid Specialeventid { get; private set; }

        /// <summary>
        /// Gets the IInvoices.
        /// </summary>
        public virtual IInvoices Invoices { get; private set; }

        /// <summary>
        /// Gets the ILeads.
        /// </summary>
        public virtual ILeads Leads { get; private set; }

        /// <summary>
        /// Gets the ILists.
        /// </summary>
        public virtual ILists Lists { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxioeventlocation.
        /// </summary>
        public virtual IObjectidadoxioeventlocation Objectidadoxioeventlocation { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxioinvestigationcontact.
        /// </summary>
        public virtual IObjectidadoxioinvestigationcontact Objectidadoxioinvestigationcontact { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxioinvestigationrequest.
        /// </summary>
        public virtual IObjectidadoxioinvestigationrequest Objectidadoxioinvestigationrequest { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxioinvestigationsubject.
        /// </summary>
        public virtual IObjectidadoxioinvestigationsubject Objectidadoxioinvestigationsubject { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxioonestopmessageitem.
        /// </summary>
        public virtual IObjectidadoxioonestopmessageitem Objectidadoxioonestopmessageitem { get; private set; }

        /// <summary>
        /// Gets the IProductadoxioapplicationtyperenewalfeeproduct.
        /// </summary>
        public virtual IProductadoxioapplicationtyperenewalfeeproduct Productadoxioapplicationtyperenewalfeeproduct { get; private set; }

        /// <summary>
        /// Gets the ISavedqueries.
        /// </summary>
        public virtual ISavedqueries Savedqueries { get; private set; }

        /// <summary>
        /// Gets the ISharepointdocumentlocations.
        /// </summary>
        public virtual ISharepointdocumentlocations Sharepointdocumentlocations { get; private set; }

        /// <summary>
        /// Gets the ISharepointsites.
        /// </summary>
        public virtual ISharepointsites Sharepointsites { get; private set; }

        /// <summary>
        /// Gets the ISystemforms.
        /// </summary>
        public virtual ISystemforms Systemforms { get; private set; }

        /// <summary>
        /// Gets the ISystemusers.
        /// </summary>
        public virtual ISystemusers Systemusers { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioeventlocationcreatedby.
        /// </summary>
        public virtual ILkadoxioeventlocationcreatedby Lkadoxioeventlocationcreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioeventlocationcreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxioeventlocationcreatedonbehalfby Lkadoxioeventlocationcreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioeventlocationmodifiedby.
        /// </summary>
        public virtual ILkadoxioeventlocationmodifiedby Lkadoxioeventlocationmodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioeventlocationmodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxioeventlocationmodifiedonbehalfby Lkadoxioeventlocationmodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationcontactcreatedby.
        /// </summary>
        public virtual ILkadoxioinvestigationcontactcreatedby Lkadoxioinvestigationcontactcreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationcontactcreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxioinvestigationcontactcreatedonbehalfby Lkadoxioinvestigationcontactcreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationcontactmodifiedby.
        /// </summary>
        public virtual ILkadoxioinvestigationcontactmodifiedby Lkadoxioinvestigationcontactmodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationcontactmodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxioinvestigationcontactmodifiedonbehalfby Lkadoxioinvestigationcontactmodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationrequestcreatedby.
        /// </summary>
        public virtual ILkadoxioinvestigationrequestcreatedby Lkadoxioinvestigationrequestcreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationrequestcreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxioinvestigationrequestcreatedonbehalfby Lkadoxioinvestigationrequestcreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationrequestmodifiedby.
        /// </summary>
        public virtual ILkadoxioinvestigationrequestmodifiedby Lkadoxioinvestigationrequestmodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationrequestmodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxioinvestigationrequestmodifiedonbehalfby Lkadoxioinvestigationrequestmodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationsubjectcreatedby.
        /// </summary>
        public virtual ILkadoxioinvestigationsubjectcreatedby Lkadoxioinvestigationsubjectcreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationsubjectcreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxioinvestigationsubjectcreatedonbehalfby Lkadoxioinvestigationsubjectcreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationsubjectmodifiedby.
        /// </summary>
        public virtual ILkadoxioinvestigationsubjectmodifiedby Lkadoxioinvestigationsubjectmodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinvestigationsubjectmodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxioinvestigationsubjectmodifiedonbehalfby Lkadoxioinvestigationsubjectmodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioonestopmessageitemcreatedby.
        /// </summary>
        public virtual ILkadoxioonestopmessageitemcreatedby Lkadoxioonestopmessageitemcreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioonestopmessageitemcreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxioonestopmessageitemcreatedonbehalfby Lkadoxioonestopmessageitemcreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioonestopmessageitemmodifiedby.
        /// </summary>
        public virtual ILkadoxioonestopmessageitemmodifiedby Lkadoxioonestopmessageitemmodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioonestopmessageitemmodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxioonestopmessageitemmodifiedonbehalfby Lkadoxioonestopmessageitemmodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the IUseradoxioeventlocation.
        /// </summary>
        public virtual IUseradoxioeventlocation Useradoxioeventlocation { get; private set; }

        /// <summary>
        /// Gets the IUseradoxioinvestigationcontact.
        /// </summary>
        public virtual IUseradoxioinvestigationcontact Useradoxioinvestigationcontact { get; private set; }

        /// <summary>
        /// Gets the IUseradoxioinvestigationrequest.
        /// </summary>
        public virtual IUseradoxioinvestigationrequest Useradoxioinvestigationrequest { get; private set; }

        /// <summary>
        /// Gets the IUseradoxioinvestigationsubject.
        /// </summary>
        public virtual IUseradoxioinvestigationsubject Useradoxioinvestigationsubject { get; private set; }

        /// <summary>
        /// Gets the IUseradoxioonestopmessageitem.
        /// </summary>
        public virtual IUseradoxioonestopmessageitem Useradoxioonestopmessageitem { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxioeventlocation.
        /// </summary>
        public virtual ITeamadoxioeventlocation Teamadoxioeventlocation { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxioinvestigationcontact.
        /// </summary>
        public virtual ITeamadoxioinvestigationcontact Teamadoxioinvestigationcontact { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxioinvestigationrequest.
        /// </summary>
        public virtual ITeamadoxioinvestigationrequest Teamadoxioinvestigationrequest { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxioinvestigationsubject.
        /// </summary>
        public virtual ITeamadoxioinvestigationsubject Teamadoxioinvestigationsubject { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxioonestopmessageitem.
        /// </summary>
        public virtual ITeamadoxioonestopmessageitem Teamadoxioonestopmessageitem { get; private set; }

        /// <summary>
        /// Gets the IWorkflows.
        /// </summary>
        public virtual IWorkflows Workflows { get; private set; }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='httpClient'>
        /// HttpClient to be used
        /// </param>
        /// <param name='disposeHttpClient'>
        /// True: will dispose the provided httpClient on calling DynamicsClient.Dispose(). False: will not dispose provided httpClient</param>
        protected DynamicsClient(HttpClient httpClient, bool disposeHttpClient) : base(httpClient, disposeHttpClient)
        {
            Initialize();
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        protected DynamicsClient(params DelegatingHandler[] handlers) : base(handlers)
        {
            Initialize();
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='rootHandler'>
        /// Optional. The http client handler used to handle http transport.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        protected DynamicsClient(HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : base(rootHandler, handlers)
        {
            Initialize();
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        protected DynamicsClient(System.Uri baseUri, params DelegatingHandler[] handlers) : this(handlers)
        {
            if (baseUri == null)
            {
                throw new System.ArgumentNullException("baseUri");
            }
            BaseUri = baseUri;
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='rootHandler'>
        /// Optional. The http client handler used to handle http transport.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        protected DynamicsClient(System.Uri baseUri, HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : this(rootHandler, handlers)
        {
            if (baseUri == null)
            {
                throw new System.ArgumentNullException("baseUri");
            }
            BaseUri = baseUri;
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(ServiceClientCredentials credentials, params DelegatingHandler[] handlers) : this(handlers)
        {
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='httpClient'>
        /// HttpClient to be used
        /// </param>
        /// <param name='disposeHttpClient'>
        /// True: will dispose the provided httpClient on calling DynamicsClient.Dispose(). False: will not dispose provided httpClient</param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(ServiceClientCredentials credentials, HttpClient httpClient, bool disposeHttpClient) : this(httpClient, disposeHttpClient)
        {
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='rootHandler'>
        /// Optional. The http client handler used to handle http transport.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : this(rootHandler, handlers)
        {
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(System.Uri baseUri, ServiceClientCredentials credentials, params DelegatingHandler[] handlers) : this(handlers)
        {
            if (baseUri == null)
            {
                throw new System.ArgumentNullException("baseUri");
            }
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            BaseUri = baseUri;
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='rootHandler'>
        /// Optional. The http client handler used to handle http transport.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(System.Uri baseUri, ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : this(rootHandler, handlers)
        {
            if (baseUri == null)
            {
                throw new System.ArgumentNullException("baseUri");
            }
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            BaseUri = baseUri;
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// An optional partial-method to perform custom initialization.
        ///</summary>
        partial void CustomInitialize();
        /// <summary>
        /// Initializes client properties.
        /// </summary>
        private void Initialize()
        {
            Accounts = new Accounts(this);
            Accountinvestigationrequests = new Accountinvestigationrequests(this);
            Accountinvestigationsubjects = new Accountinvestigationsubjects(this);
            Adoxiolicencetypeadoxioinvestigationset = new Adoxiolicencetypeadoxioinvestigationset(this);
            Aliases = new Aliases(this);
            Annualvolumes = new Annualvolumes(this);
            Applicationbpfv3s = new Applicationbpfv3s(this);
            Applicationcrsbpfv4s = new Applicationcrsbpfv4s(this);
            Applicationinvoicehistories = new Applicationinvoicehistories(this);
            Applicationlicenseechangesv10s = new Applicationlicenseechangesv10s(this);
            Applicationliquorbpfv2s = new Applicationliquorbpfv2s(this);
            Applicationrelocationv1s = new Applicationrelocationv1s(this);
            Applications = new Applications(this);
            Applicationinvestigationrequests = new Applicationinvestigationrequests(this);
            Applicationstructurechangev1s = new Applicationstructurechangev1s(this);
            Applicationtermsconditionslimitations = new Applicationtermsconditionslimitations(this);
            Applicationtransferownershipv1s = new Applicationtransferownershipv1s(this);
            Applicationtypecontents = new Applicationtypecontents(this);
            Applicationtypefeeschedules = new Applicationtypefeeschedules(this);
            Applicationtypes = new Applicationtypes(this);
            Renewalfeeproduct = new Renewalfeeproduct(this);
            Applicenseechangebpfv2s = new Applicenseechangebpfv2s(this);
            Areas = new Areas(this);
            Auditlogrequests = new Auditlogrequests(this);
            Businessaccounts = new Businessaccounts(this);
            Cannabisinventoryreports = new Cannabisinventoryreports(this);
            Cannabismonthlyreports = new Cannabismonthlyreports(this);
            Cannabisproductadmins = new Cannabisproductadmins(this);
            Citydistricts = new Citydistricts(this);
            Complaints = new Complaints(this);
            Complaintinvestigationrequests = new Complaintinvestigationrequests(this);
            Complaintinvestigationsunit = new Complaintinvestigationsunit(this);
            Complianceinvestigations = new Complianceinvestigations(this);
            Complianceinvestigationadoxiormreviewinvestigationenforcement = new Complianceinvestigationadoxiormreviewinvestigationenforcement(this);
            Complianceinvestigationenforcementaction = new Complianceinvestigationenforcementaction(this);
            Compliancemeetings = new Compliancemeetings(this);
            Contraventionadmins = new Contraventionadmins(this);
            Contraventioninvestigationrequests = new Contraventioninvestigationrequests(this);
            Contraventions = new Contraventions(this);
            Corporatehistorysummaries = new Corporatehistorysummaries(this);
            Corporateroles = new Corporateroles(this);
            Customautonumberdefinitions = new Customautonumberdefinitions(this);
            Customautonumberrequests = new Customautonumberrequests(this);
            Documentadmins = new Documentadmins(this);
            Documents = new Documents(this);
            Endorsements = new Endorsements(this);
            Enforcementactionbpfs = new Enforcementactionbpfs(this);
            Enforcementactions = new Enforcementactions(this);
            Investigationid = new Investigationid(this);
            Establishmentincidents = new Establishmentincidents(this);
            Establishments = new Establishments(this);
            Establishmentinvestigationrequests = new Establishmentinvestigationrequests(this);
            Pmuareaid = new Pmuareaid(this);
            Establishmentwatchwords = new Establishmentwatchwords(this);
            Eventaddresses = new Eventaddresses(this);
            Eventlocations = new Eventlocations(this);
            Eventid = new Eventid(this);
            Eventlocationasyncoperations = new Eventlocationasyncoperations(this);
            Eventlocationbulkdeletefailures = new Eventlocationbulkdeletefailures(this);
            Eventlocationmailboxtrackingfolders = new Eventlocationmailboxtrackingfolders(this);
            Eventlocationprincipalobjectattributeaccesses = new Eventlocationprincipalobjectattributeaccesses(this);
            Eventlocationprocesssession = new Eventlocationprocesssession(this);
            Eventlocationsyncerrors = new Eventlocationsyncerrors(this);
            Serviceareaid = new Serviceareaid(this);
            Events = new Events(this);
            Eventeventlocations = new Eventeventlocations(this);
            Eventschedules = new Eventschedules(this);
            Exhibits = new Exhibits(this);
            Federalreportexports = new Federalreportexports(this);
            Fiainvestigationlogs = new Fiainvestigationlogs(this);
            Formelementuploadfields = new Formelementuploadfields(this);
            Fundingsources = new Fundingsources(this);
            Hoursofservices = new Hoursofservices(this);
            Hoursofservicesdefaults = new Hoursofservicesdefaults(this);
            Incidentadoxiolicencetypeset = new Incidentadoxiolicencetypeset(this);
            Inspectioninspectorsset = new Inspectioninspectorsset(this);
            Inspectionformconfigurations = new Inspectionformconfigurations(this);
            Inspectionreactivationhistories = new Inspectionreactivationhistories(this);
            Inspectorcommentsrollups = new Inspectorcommentsrollups(this);
            Inspectorreports = new Inspectorreports(this);
            Interests = new Interests(this);
            Investigationactivities = new Investigationactivities(this);
            Investigationcontacts = new Investigationcontacts(this);
            Contactid = new Contactid(this);
            Investigationcontactasyncoperations = new Investigationcontactasyncoperations(this);
            Investigationcontactbulkdeletefailures = new Investigationcontactbulkdeletefailures(this);
            Investigationcontactduplicatebaserecord = new Investigationcontactduplicatebaserecord(this);
            Investigationcontactduplicatematchingrecord = new Investigationcontactduplicatematchingrecord(this);
            Investigationcontactmailboxtrackingfolders = new Investigationcontactmailboxtrackingfolders(this);
            Investigationcontactprincipalobjectattributeaccesses = new Investigationcontactprincipalobjectattributeaccesses(this);
            Investigationcontactprocesssession = new Investigationcontactprocesssession(this);
            Investigationcontactsyncerrors = new Investigationcontactsyncerrors(this);
            Investigationreactivationhistories = new Investigationreactivationhistories(this);
            Investigationrequests = new Investigationrequests(this);
            Accountid = new Accountid(this);
            Applicationid = new Applicationid(this);
            Complaintid = new Complaintid(this);
            Contraventionid = new Contraventionid(this);
            Establishmentid = new Establishmentid(this);
            Investigationrequestasyncoperations = new Investigationrequestasyncoperations(this);
            Investigationrequestbulkdeletefailures = new Investigationrequestbulkdeletefailures(this);
            Investigationrequestduplicatebaserecord = new Investigationrequestduplicatebaserecord(this);
            Investigationrequestduplicatematchingrecord = new Investigationrequestduplicatematchingrecord(this);
            Investigationrequestinvestigations = new Investigationrequestinvestigations(this);
            Investigationrequestmailboxtrackingfolders = new Investigationrequestmailboxtrackingfolders(this);
            Investigationrequestprincipalobjectattributeaccesses = new Investigationrequestprincipalobjectattributeaccesses(this);
            Investigationrequestprocesssession = new Investigationrequestprocesssession(this);
            Investigationrequestsharepointdocumentlocations = new Investigationrequestsharepointdocumentlocations(this);
            Investigationrequestsyncerrors = new Investigationrequestsyncerrors(this);
            Licenceid = new Licenceid(this);
            Officeid = new Officeid(this);
            Investigations = new Investigations(this);
            Investigationinvestigationcontacts = new Investigationinvestigationcontacts(this);
            Investigationinvestigations = new Investigationinvestigations(this);
            Investigationrequestid = new Investigationrequestid(this);
            Investigationunitid = new Investigationunitid(this);
            Investigationsubjects = new Investigationsubjects(this);
            Investigationsubjectasyncoperations = new Investigationsubjectasyncoperations(this);
            Investigationsubjectbulkdeletefailures = new Investigationsubjectbulkdeletefailures(this);
            Investigationsubjectduplicatebaserecord = new Investigationsubjectduplicatebaserecord(this);
            Investigationsubjectduplicatematchingrecord = new Investigationsubjectduplicatematchingrecord(this);
            Investigationsubjectmailboxtrackingfolders = new Investigationsubjectmailboxtrackingfolders(this);
            Investigationsubjectprincipalobjectattributeaccesses = new Investigationsubjectprincipalobjectattributeaccesses(this);
            Investigationsubjectprocesssession = new Investigationsubjectprocesssession(this);
            Investigationsubjectsyncerrors = new Investigationsubjectsyncerrors(this);
            Ldborders = new Ldborders(this);
            Leconnections = new Leconnections(this);
            Legalentities = new Legalentities(this);
            Licenceldbordertotalhistories = new Licenceldbordertotalhistories(this);
            Licenceses = new Licenceses(this);
            Licencesadoxioonestopmessageitemlicence = new Licencesadoxioonestopmessageitemlicence(this);
            Licencesinvestigationrequests = new Licencesinvestigationrequests(this);
            Licencesubcategories = new Licencesubcategories(this);
            Licencetypes = new Licencetypes(this);
            Licencetypesapplicationtypesset = new Licencetypesapplicationtypesset(this);
            Licenseechangelogs = new Licenseechangelogs(this);
            Loans = new Loans(this);
            Localgovindigenousnations = new Localgovindigenousnations(this);
            Lqrlicencetransferbpfs = new Lqrlicencetransferbpfs(this);
            Offsitestorages = new Offsitestorages(this);
            Onestopmessageitems = new Onestopmessageitems(this);
            Licence = new Licence(this);
            Onestopmessageitemasyncoperations = new Onestopmessageitemasyncoperations(this);
            Onestopmessageitembulkdeletefailures = new Onestopmessageitembulkdeletefailures(this);
            Onestopmessageitemduplicatebaserecord = new Onestopmessageitemduplicatebaserecord(this);
            Onestopmessageitemduplicatematchingrecord = new Onestopmessageitemduplicatematchingrecord(this);
            Onestopmessageitemmailboxtrackingfolders = new Onestopmessageitemmailboxtrackingfolders(this);
            Onestopmessageitemprincipalobjectattributeaccesses = new Onestopmessageitemprincipalobjectattributeaccesses(this);
            Onestopmessageitemprocesssession = new Onestopmessageitemprocesssession(this);
            Onestopmessageitemsyncerrors = new Onestopmessageitemsyncerrors(this);
            Personalhistorysummaries = new Personalhistorysummaries(this);
            Pmuareas = new Pmuareas(this);
            Pmuareaestablishments = new Pmuareaestablishments(this);
            Policejurisdictions = new Policejurisdictions(this);
            Policydocuments = new Policydocuments(this);
            Postalcodes = new Postalcodes(this);
            Previousaddresses = new Previousaddresses(this);
            Proratedlicencefeeschedules = new Proratedlicencefeeschedules(this);
            Regions = new Regions(this);
            Relatedparties = new Relatedparties(this);
            Rmreviews = new Rmreviews(this);
            Investigationenforcement = new Investigationenforcement(this);
            Serviceareas = new Serviceareas(this);
            Serviceareaeventlocations = new Serviceareaeventlocations(this);
            Settings = new Settings(this);
            Spddatarows = new Spddatarows(this);
            Spdexportses = new Spdexportses(this);
            Specialeventlicencedareas = new Specialeventlicencedareas(this);
            Specialeventlocations = new Specialeventlocations(this);
            Specialeventnotes = new Specialeventnotes(this);
            Specialevents = new Specialevents(this);
            Specialeventinspection = new Specialeventinspection(this);
            Specialeventschedules = new Specialeventschedules(this);
            Specialeventtandcs = new Specialeventtandcs(this);
            Taxandaccountings = new Taxandaccountings(this);
            Termsconditionslimitationspresets = new Termsconditionslimitationspresets(this);
            Territories = new Territories(this);
            Officeinvestigationrequests = new Officeinvestigationrequests(this);
            Tiedhouseassociations = new Tiedhouseassociations(this);
            Tiedhouseconnections = new Tiedhouseconnections(this);
            Witnesses = new Witnesses(this);
            Workerinvoicehistories = new Workerinvoicehistories(this);
            Workers = new Workers(this);
            Regardingobjectidadoxioeventlocation = new Regardingobjectidadoxioeventlocation(this);
            Regardingobjectidadoxioinvestigationcontact = new Regardingobjectidadoxioinvestigationcontact(this);
            Regardingobjectidadoxioinvestigationrequest = new Regardingobjectidadoxioinvestigationrequest(this);
            Regardingobjectidadoxioinvestigationsubject = new Regardingobjectidadoxioinvestigationsubject(this);
            Regardingobjectidadoxioonestopmessageitem = new Regardingobjectidadoxioonestopmessageitem(this);
            Businessunitadoxioeventlocation = new Businessunitadoxioeventlocation(this);
            Businessunitadoxioinvestigationcontact = new Businessunitadoxioinvestigationcontact(this);
            Businessunitadoxioinvestigationrequest = new Businessunitadoxioinvestigationrequest(this);
            Businessunitadoxioinvestigationsubject = new Businessunitadoxioinvestigationsubject(this);
            Businessunitadoxioonestopmessageitem = new Businessunitadoxioonestopmessageitem(this);
            Contacts = new Contacts(this);
            Contactinvestigationcontacts = new Contactinvestigationcontacts(this);
            Baserecordidadoxioinvestigationcontact = new Baserecordidadoxioinvestigationcontact(this);
            Baserecordidadoxioinvestigationrequest = new Baserecordidadoxioinvestigationrequest(this);
            Baserecordidadoxioinvestigationsubject = new Baserecordidadoxioinvestigationsubject(this);
            Baserecordidadoxioonestopmessageitem = new Baserecordidadoxioonestopmessageitem(this);
            Duplicaterecordidadoxioinvestigationcontact = new Duplicaterecordidadoxioinvestigationcontact(this);
            Duplicaterecordidadoxioinvestigationrequest = new Duplicaterecordidadoxioinvestigationrequest(this);
            Duplicaterecordidadoxioinvestigationsubject = new Duplicaterecordidadoxioinvestigationsubject(this);
            Duplicaterecordidadoxioonestopmessageitem = new Duplicaterecordidadoxioonestopmessageitem(this);
            Entitydefinitions = new Entitydefinitions(this);
            Globaloptionsetdefinitions = new Globaloptionsetdefinitions(this);
            Specialeventid = new Specialeventid(this);
            Invoices = new Invoices(this);
            Leads = new Leads(this);
            Lists = new Lists(this);
            Objectidadoxioeventlocation = new Objectidadoxioeventlocation(this);
            Objectidadoxioinvestigationcontact = new Objectidadoxioinvestigationcontact(this);
            Objectidadoxioinvestigationrequest = new Objectidadoxioinvestigationrequest(this);
            Objectidadoxioinvestigationsubject = new Objectidadoxioinvestigationsubject(this);
            Objectidadoxioonestopmessageitem = new Objectidadoxioonestopmessageitem(this);
            Productadoxioapplicationtyperenewalfeeproduct = new Productadoxioapplicationtyperenewalfeeproduct(this);
            Savedqueries = new Savedqueries(this);
            Sharepointdocumentlocations = new Sharepointdocumentlocations(this);
            Sharepointsites = new Sharepointsites(this);
            Systemforms = new Systemforms(this);
            Systemusers = new Systemusers(this);
            Lkadoxioeventlocationcreatedby = new Lkadoxioeventlocationcreatedby(this);
            Lkadoxioeventlocationcreatedonbehalfby = new Lkadoxioeventlocationcreatedonbehalfby(this);
            Lkadoxioeventlocationmodifiedby = new Lkadoxioeventlocationmodifiedby(this);
            Lkadoxioeventlocationmodifiedonbehalfby = new Lkadoxioeventlocationmodifiedonbehalfby(this);
            Lkadoxioinvestigationcontactcreatedby = new Lkadoxioinvestigationcontactcreatedby(this);
            Lkadoxioinvestigationcontactcreatedonbehalfby = new Lkadoxioinvestigationcontactcreatedonbehalfby(this);
            Lkadoxioinvestigationcontactmodifiedby = new Lkadoxioinvestigationcontactmodifiedby(this);
            Lkadoxioinvestigationcontactmodifiedonbehalfby = new Lkadoxioinvestigationcontactmodifiedonbehalfby(this);
            Lkadoxioinvestigationrequestcreatedby = new Lkadoxioinvestigationrequestcreatedby(this);
            Lkadoxioinvestigationrequestcreatedonbehalfby = new Lkadoxioinvestigationrequestcreatedonbehalfby(this);
            Lkadoxioinvestigationrequestmodifiedby = new Lkadoxioinvestigationrequestmodifiedby(this);
            Lkadoxioinvestigationrequestmodifiedonbehalfby = new Lkadoxioinvestigationrequestmodifiedonbehalfby(this);
            Lkadoxioinvestigationsubjectcreatedby = new Lkadoxioinvestigationsubjectcreatedby(this);
            Lkadoxioinvestigationsubjectcreatedonbehalfby = new Lkadoxioinvestigationsubjectcreatedonbehalfby(this);
            Lkadoxioinvestigationsubjectmodifiedby = new Lkadoxioinvestigationsubjectmodifiedby(this);
            Lkadoxioinvestigationsubjectmodifiedonbehalfby = new Lkadoxioinvestigationsubjectmodifiedonbehalfby(this);
            Lkadoxioonestopmessageitemcreatedby = new Lkadoxioonestopmessageitemcreatedby(this);
            Lkadoxioonestopmessageitemcreatedonbehalfby = new Lkadoxioonestopmessageitemcreatedonbehalfby(this);
            Lkadoxioonestopmessageitemmodifiedby = new Lkadoxioonestopmessageitemmodifiedby(this);
            Lkadoxioonestopmessageitemmodifiedonbehalfby = new Lkadoxioonestopmessageitemmodifiedonbehalfby(this);
            Useradoxioeventlocation = new Useradoxioeventlocation(this);
            Useradoxioinvestigationcontact = new Useradoxioinvestigationcontact(this);
            Useradoxioinvestigationrequest = new Useradoxioinvestigationrequest(this);
            Useradoxioinvestigationsubject = new Useradoxioinvestigationsubject(this);
            Useradoxioonestopmessageitem = new Useradoxioonestopmessageitem(this);
            Teamadoxioeventlocation = new Teamadoxioeventlocation(this);
            Teamadoxioinvestigationcontact = new Teamadoxioinvestigationcontact(this);
            Teamadoxioinvestigationrequest = new Teamadoxioinvestigationrequest(this);
            Teamadoxioinvestigationsubject = new Teamadoxioinvestigationsubject(this);
            Teamadoxioonestopmessageitem = new Teamadoxioonestopmessageitem(this);
            Workflows = new Workflows(this);
            BaseUri = new System.Uri("http://localhost");
            SerializationSettings = new JsonSerializerSettings
            {
                Formatting = Newtonsoft.Json.Formatting.Indented,
                DateFormatHandling = Newtonsoft.Json.DateFormatHandling.IsoDateFormat,
                DateTimeZoneHandling = Newtonsoft.Json.DateTimeZoneHandling.Utc,
                NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore,
                ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Serialize,
                ContractResolver = new ReadOnlyJsonContractResolver(),
                Converters = new  List<JsonConverter>
                    {
                        new Iso8601TimeSpanConverter()
                    }
            };
            DeserializationSettings = new JsonSerializerSettings
            {
                DateFormatHandling = Newtonsoft.Json.DateFormatHandling.IsoDateFormat,
                DateTimeZoneHandling = Newtonsoft.Json.DateTimeZoneHandling.Utc,
                NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore,
                ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Serialize,
                ContractResolver = new ReadOnlyJsonContractResolver(),
                Converters = new List<JsonConverter>
                    {
                        new Iso8601TimeSpanConverter()
                    }
            };
            CustomInitialize();
        }
    }
}
